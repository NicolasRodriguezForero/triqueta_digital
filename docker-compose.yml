services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: triqueta-db
    environment:
      POSTGRES_USER: triqueta_user
      POSTGRES_PASSWORD: triqueta_pass
      POSTGRES_DB: triqueta_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U triqueta_user -d triqueta_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: triqueta-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: triqueta-backend
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql+asyncpg://triqueta_user:triqueta_pass@db:5432/triqueta_db
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (React + Vite) - Production Build
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: triqueta-frontend
    env_file:
      - ./frontend/.env
    expose:
      - "80"
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: triqueta-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
